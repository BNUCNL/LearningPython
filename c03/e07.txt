什么是命名空间，它和模块文件有什么关联？
命名空间就是变量（也就是变量名）的封装。它在Python中以一个带有属性的对象的形式出现。每个模块文件自动成为一个命名空间：也就是说，一个对变量的封装，这些变量对应了顶层文件的赋值。命名空间可以避免在Python程序中的命名冲突——因为每个模块文件都是独立完备的命名空间，一个文件想要使用其它文件中的变量名，必须要明确地导入对应的文件。
补充内容：
命名空间(name space)是从名称到对象的(object)的映射(map)。当一个名称映射到一个对象上时，它就和这个对象绑定(bind)了。Python中一切都以对象形式进行，每个名称对应一个对象，而一个对象可以对应多个名称。Python中常用的命名空间有：内建命名空间、全局命名空间、局部命名空间。
模块(module)是一些函数和类的集合文件，其实现一些相应的功能，当我们需要使用这些功能的时候，直接把相应的模块导入到程序中就可以使用了。这类似于C语言中的include头文件，Python中用import导入我们需要的模块。
